{
	"name": "copy_training",
	"properties": {
		"activities": [
			{
				"name": "copy_activity",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Set variable2",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ExcelSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"modifiedDatetimeStart": {
								"value": "@{formatDateTime(pipeline().parameters.start)}",
								"type": "Expression"
							},
							"modifiedDatetimeEnd": {
								"value": "@{formatDateTime(pipeline().parameters.end)}",
								"type": "Expression"
							},
							"wildcardFileName": "*",
							"enablePartitionDiscovery": false
						}
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"enableSkipIncompatibleRow": true,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SourceDataset_blob_excel",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DestinationDataset_sql_table",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "start",
					"value": {
						"value": "@pipeline().parameters.start",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set variable2",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "end",
					"value": {
						"value": "@pipeline().parameters.end",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"start": {
				"type": "string"
			},
			"end": {
				"type": "string"
			}
		},
		"variables": {
			"start": {
				"type": "String"
			},
			"end": {
				"type": "String"
			}
		},
		"annotations": []
	}
}